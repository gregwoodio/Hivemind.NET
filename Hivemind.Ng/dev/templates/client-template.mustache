/*
 * This file is autogenerated. Please see README.md for instructions on editing.
 */

import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import { TokenService } from './../../app/redux/TokenService';
import { FormDataHelper } from '../../app/clients/FormDataHelper';
import { ClientService } from './../../app/clients/ClientService';
{{#imports}}
import { {{import}} } from '../entities/{{import}}';
{{/imports}}

@Injectable()
export class {{name}} {

    constructor(
        private _http: HttpClient, 
        private _tokenService: TokenService,
        private _formDataHelper: FormDataHelper,
        private _clientService: ClientService,
        private _path: string
    ) {}

    {{#methods}}
    public {{methodName}}(
        {{#pathParams}}
        {{name}}{{required}}: {{type}},
        {{/pathParams}}
        {{#bodyParams}}
        {{name}}{{required}}: {{type}},
        {{/bodyParams}}
    ): Observable<{{returns}}> {

        this.ensurePathExists();

        {{#bodyParams}}
        const body = this._formDataHelper.getFormData({{name}});
        {{/bodyParams}}

        return this._http.{{httpMethod}}<{{returns}}>(
            this._path + '{{{path}}}'
            {{#bodyParams}}
            , body
            {{/bodyParams}}
            , {
                headers: new HttpHeaders({
                    'Authorization': 'Bearer ' + this._tokenService.token,
                    'Content-Type': 'application/x-www-form-urlencoded'
                })
            }
        );
    }

    {{/methods}}

    private ensurePathExists() {
        if (!this._path) {
            this._path = this._clientService.getPath();
        }
    }
}
