/*
 * This file is autogenerated. Please see README.md for instructions on editing.
 */

import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import { TokenService } from './../../app/redux/TokenService';
import { FormDataHelper } from '../../app/clients/FormDataHelper';
import { ClientService } from './../../app/clients/ClientService';
import { User } from '../entities/User';
import { Login } from '../entities/Login';

@Injectable()
export class UsersClient {

    constructor(
        private _http: HttpClient, 
        private _tokenService: TokenService,
        private _formDataHelper: FormDataHelper,
        private _clientService: ClientService,
        private _path: string
    ) {}

    public GetUser(
    ): Observable<User> {

        this.ensurePathExists();


        return this._http.get<User>(
            this._path + '/api/user'
            , {
                headers: new HttpHeaders({
                    'Authorization': 'Bearer ' + this._tokenService.token,
                    'Content-Type': 'application/x-www-form-urlencoded'
                })
            }
        );
    }

    public Register(
        user: Login,
    ): Observable<User> {

        this.ensurePathExists();

        const body = this._formDataHelper.getFormData(user);

        return this._http.post<User>(
            this._path + '/api/user'
            , body
            , {
                headers: new HttpHeaders({
                    'Authorization': 'Bearer ' + this._tokenService.token,
                    'Content-Type': 'application/x-www-form-urlencoded'
                })
            }
        );
    }


    private ensurePathExists() {
        if (!this._path) {
            this._path = this._clientService.getPath();
        }
    }
}
