/*
 * This file is autogenerated. Please see README.md for instructions on editing.
 */

import { HttpParams } from '@angular/common/http';

export class GangerBattleStats {
    public gangerId: string;
    public kills: number;
    public objectives: number;
    public down: boolean;
    public outOfAction: boolean;

    public constructor(partial: Partial<GangerBattleStats>) {
        if (partial.gangerId) {
            this.gangerId = partial.gangerId;
        }
        if (partial.kills) {
            this.kills = partial.kills;
        }
        if (partial.objectives) {
            this.objectives = partial.objectives;
        }
        if (partial.down) {
            this.down = partial.down;
        }
        if (partial.outOfAction) {
            this.outOfAction = partial.outOfAction;
        }
    }

    public toHttpParams(): HttpParams {
        //return new HttpParams()
        //    .set('gangerId', this.gangerId !== undefined ? this.gangerId.toString() : '')
        //    .set('kills', this.kills !== undefined ? this.kills.toString() : '')
        //    .set('objectives', this.objectives !== undefined ? this.objectives.toString() : '')
        //    .set('down', this.down !== undefined ? this.down.toString() : '')
        //    .set('outOfAction', this.outOfAction !== undefined ? this.outOfAction.toString() : '')
        //      ;

        let params = new HttpParams();
        let properties = [];
        if (this.gangerId) {
            properties.push('gangerId');
        }
        if (this.kills) {
            properties.push('kills');
        }
        if (this.objectives) {
            properties.push('objectives');
        }
        if (this.down) {
            properties.push('down');
        }
        if (this.outOfAction) {
            properties.push('outOfAction');
        }

        properties.forEach(prop => {
            params = params.set(prop, this[prop]);
        });

        return params;
    }
}