import { Gang } from './../../autogenerated/entities/Gang';
import { SET_USER } from './GangState';
import { UsersClient } from 'autogenerated/clients/UsersClient';
import { NgRedux } from '@angular-redux/store';
import { IAppState } from './IAppState';
import { Injectable } from '@angular/core';
import { User } from 'autogenerated/entities/User';
import { GangService } from 'app/redux/GangService';

@Injectable()
export class UserService {

  constructor(
    private _ngRedux: NgRedux<IAppState>,
    private _usersClient: UsersClient,
    private _gangService: GangService
  ) { }

  public getUser() {
    this._usersClient.GetUser().subscribe((user: User) => {
      const gangs = user.userGangs as Array<Gang>;

      if (gangs.length > 0) {
        this._gangService.getGang(gangs[0].gangId);
      } else {
        // add new gang
      }

      this._ngRedux.dispatch({
        type: SET_USER,
        payload: user
      });

    }, err => {
      console.log(err);
    });
  }
}
