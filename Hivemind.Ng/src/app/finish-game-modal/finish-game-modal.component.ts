import { IAppState } from './../redux/IAppState';
import { Component, OnInit } from '@angular/core';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { GameService } from '../redux/GameService';
import { NgRedux } from '@angular-redux/store';
import { BattleReport } from '../../autogenerated/entities/BattleReport';
import { Gang } from '../../autogenerated/entities/Gang';

@Component({
  selector: 'finish-game-modal',
  templateUrl: './finish-game-modal.component.html',
  styleUrls: ['./finish-game-modal.component.css']
})
export class FinishGameModalComponent {

  public showFinishGameModal: boolean;
  public finishGameForm: FormGroup;

  private gang: Gang;
  private battleReport: BattleReport;

  constructor(
    private _formBuilder: FormBuilder,
    private _gameService: GameService,
    private _ngRedux: NgRedux<IAppState>
  ) {
    this.finishGameForm = this._formBuilder.group({
      'hasWon': [false, Validators.required],
      'isAttacker': [false, Validators.required],
      'opponentGangRating': [0, Validators.required],
      'gameType': ['lbl_gametype_gang_fight', Validators.required]
    });

    this._ngRedux.subscribe(() => {
      const state = this._ngRedux.getState();
      this.gang = state.gang;
      this.battleReport = state.battleReport;
    });
  }

  public display() {
    this.showFinishGameModal = true;
  }

  public finishGame() {
    this.battleReport = Object.assign(this.battleReport, {
      gangId: this.gang.gangId,
      hasWon: this.finishGameForm.controls['hasWon'].value,
      isAttacker: this.finishGameForm.controls['isAttacker'].value,
      opponentGangRating: this.finishGameForm.controls['opponentGangRating'].value,
      gameType: this.finishGameForm.controls['gameType'].value,
    });

    this._gameService.processGame(this.battleReport);

    this.showFinishGameModal = false;
  }
}
