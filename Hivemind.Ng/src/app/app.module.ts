import { FormDataHelper } from './clients/FormDataHelper';
import { GameService } from './redux/GameService';
import { UserService } from './redux/UserService';
import { UsersClient } from './../autogenerated/clients/UsersClient';
import { TokenService } from './redux/TokenService';
import { TerritoriesComponent } from './territories/territories.component';
import { GangersClient } from './../autogenerated/clients/GangersClient';
import { GangersComponent } from './gangers/gangers.component';
import { GangComponent } from './gang/gang.component';
import { GangsClient } from './../autogenerated/clients/GangsClient';
import { GangService } from './redux/GangService';
import { reduce, initialState } from './redux/GangState';
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { AppComponent } from './app.component';
import { NgReduxModule, NgRedux } from '@angular-redux/store';
import { IAppState } from './redux/IAppState';
import { Store, createStore } from 'redux';
import { HttpClientModule } from '@angular/common/http';
import { RouterModule, Routes } from '@angular/router';
import { WeaponsComponent } from './weapons/weapons.component';
import { StoreComponent } from './store/store.component';
import { StatisticsComponent } from './statistics/statistics.component';
import { HttpClient } from '@angular/common/http';
import { LoginClient } from 'app/clients/LoginClient';
import { LoginModalComponent } from './login-modal/login-modal.component';
import { GangerService } from 'app/redux/GangerService';
import { WeaponService } from './redux/WeaponService';
import { WeaponsClient } from '../autogenerated/clients/WeaponsClient';
import { GameClient } from '../autogenerated/clients/GameClient';
import { FinishGameModalComponent } from './finish-game-modal/finish-game-modal.component';
import { SignupModalComponent } from './signup-modal/signup-modal.component';
import { ClientService } from './clients/ClientService';

const state: IAppState = initialState;

export const createAppStore = (): Store<IAppState> => {
  return createStore<IAppState>(reduce, state);
};

const routes: Routes = [
  { path: 'gang', component: GangComponent },
  { path: 'gangers', component: GangersComponent },
  { path: 'weapons', component: WeaponsComponent },
  { path: 'territories', component: TerritoriesComponent },
  { path: 'statistics', component: StatisticsComponent },
  { path: 'store', component: StoreComponent }
];

@NgModule({
  declarations: [
    AppComponent,
    GangComponent,
    GangersComponent,
    TerritoriesComponent,
    WeaponsComponent,
    StoreComponent,
    StatisticsComponent,
    LoginModalComponent,
    FinishGameModalComponent,
    SignupModalComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    ReactiveFormsModule,
    HttpClientModule,
    RouterModule.forRoot(routes)
  ],
  providers: [
    { provide: NgRedux, useFactory: createAppStore },
    HttpClient,
    TokenService,
    UserService,
    GangService,
    GangsClient,
    GangerService,
    GangersClient,
    WeaponService,
    WeaponsClient,
    GameService,
    GameClient,
    UsersClient,
    LoginClient,
    ClientService,
    FormDataHelper
  ],
  bootstrap: [AppComponent]
})
export class AppModule {
  constructor(ngRedux: NgRedux<IAppState>) {
  }
}