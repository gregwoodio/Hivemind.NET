<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lbl_injury_arm_wound_description" xml:space="preserve">
    <value>The fighter has smashed one arm. Although he recovers from his injury his strength is permanently reduced as a result. The fighter’s Strength characteristic is reduced by -1 when using that arm. Randomly determine which arm has been hit. Bear in mind that some hand-to-hand weapons use the fighter’s own Strength, eg swords.</value>
  </data>
  <data name="lbl_injury_arm_wound_name" xml:space="preserve">
    <value>Arm Wound</value>
  </data>
  <data name="lbl_injury_bitter_enmity_description" xml:space="preserve">
    <value>Although he makes a full physical recovery, the fighter has been psychologically scarred by his experiences. He develops a bitter enmity for the gang that was responsible for his injury. From now on, the fighter hates the following (roll a D6).
1-2 The individual enemy who inflicted the injury (if unknown, the gang leader).
3-4 The leader of the gang who inflicted the injury.
5 The entire gang responsible for his injury.
6 All gangs from the same House as the gang that inflicted his injury. If the same House as the fighter, roll again.</value>
  </data>
  <data name="lbl_injury_bitter_enmity_name" xml:space="preserve">
    <value>Bitter Enmity</value>
  </data>
  <data name="lbl_injury_blinded_description" xml:space="preserve">
    <value>The fighter survives but loses the sight of one eye. Randomly determine which eye. A character with only one eye has his Ballistic Skill reduced by -1. If the fighter is subsequently blinded in his remaining good eye then he must retire from the gang.</value>
  </data>
  <data name="lbl_injury_blinded_name" xml:space="preserve">
    <value>Blinded in One Eye</value>
  </data>
  <data name="lbl_injury_captured_description" xml:space="preserve">
    <value>The fighter is captured. Captives may be exchanged, ransomed back or sold into slavery. If both gangs hold captives then they must be exchanged on a one-for-one basis, starting with models of the highest value. Any remaining captives must be ransomed back to their own gang if the player is willing to pay the captor’s asking price. There is no fixed value for ransom – it is a matter for the players to decide for themselves. Finally, fighters who are neither exchanged or ransomed may be sold to the Guilders as slaves earning the captor D6 x 5 Guilder credits. Captives who are exchanged or ransomed retain all of their weapons and equipment; if captives are sold their weaponry and equipment is kept by the captors.</value>
  </data>
  <data name="lbl_injury_captured_name" xml:space="preserve">
    <value>Captured</value>
  </data>
  <data name="lbl_injury_chest_wound_description" xml:space="preserve">
    <value>The fighter has been badly wounded in the chest. He recovers but is weakened by the injury and his Toughness characteristic is reduced by -1.</value>
  </data>
  <data name="lbl_injury_chest_wound_name" xml:space="preserve">
    <value>Chest Wound</value>
  </data>
  <data name="lbl_injury_dead_description" xml:space="preserve">
    <value>The fighter is killed in action and his body abandoned to the mutant rats of the Underhive. All the weapons and equipment carried by the fighter are lost.</value>
  </data>
  <data name="lbl_injury_dead_name" xml:space="preserve">
    <value>Dead</value>
  </data>
  <data name="lbl_injury_deafened_description" xml:space="preserve">
    <value>The fighter survives but is partially deafened as a result of his injuries. An individual suffers no penalty if he is partially deafened, but if he is deafened for a second time he suffers -1 from his Leadership characteristic.</value>
  </data>
  <data name="lbl_injury_deafened_name" xml:space="preserve">
    <value>Partially Deafened</value>
  </data>
  <data name="lbl_injury_full_recovery_description" xml:space="preserve">
    <value>The fighter has been knocked unconscious or suffers a mildly incapacitating wound from which he makes a full recovery.</value>
  </data>
  <data name="lbl_injury_full_recovery_name" xml:space="preserve">
    <value>Full Recovery</value>
  </data>
  <data name="lbl_injury_hand_injury_description" xml:space="preserve">
    <value>Wounds to a hand result in the loss of D3 fingers. Randomly determine which hand is affected. The fighter’s Weapon Skill is reduced by -1. If a fighter loses all five fingers on a hand then he may no longer use that hand: he may not carry anything in it, and is unable to use weapons that require two hands.</value>
  </data>
  <data name="lbl_injury_hand_injury_name" xml:space="preserve">
    <value>Hand Injury</value>
  </data>
  <data name="lbl_injury_head_wound_description" xml:space="preserve">
    <value>A serious head injury leaves the fighter somewhat unhinged. At the start of each game roll a D6 to determine how he is affected. On a 1-3 the fighter is dazed and confused – he is affected by the rules for stupidity. On a roll of 4-6 the fighter is enraged and uncontrollable – he is affected by the rules for frenzy.</value>
  </data>
  <data name="lbl_injury_head_wound_name" xml:space="preserve">
    <value>Head Wound</value>
  </data>
  <data name="lbl_injury_horrible_scars_description" xml:space="preserve">
    <value>The fighter recovers from his injuries but is left horribly disfigured. His scarred and distorted features inspire fear as described in the Advanced Rules section of the rulebook.</value>
  </data>
  <data name="lbl_injury_horrible_scars_name" xml:space="preserve">
    <value>Horrible Scars</value>
  </data>
  <data name="lbl_injury_impressive_scars_description" xml:space="preserve">
    <value>The fighter recovers and is left with impressive scars as testament to his bravery. Add +1 to the fighter’s Leadership characteristic. This bonus applies only once, further impressive scars have no additional effect.</value>
  </data>
  <data name="lbl_injury_impressive_scars_name" xml:space="preserve">
    <value>Impressive Scars</value>
  </data>
  <data name="lbl_injury_leg_wound_description" xml:space="preserve">
    <value>The fighter has smashed a leg. He recovers from his injuries but he can no longer move quickly. The fighter’s Movement characteristic is reduced by -1. Randomly determine which leg has been hurt.</value>
  </data>
  <data name="lbl_injury_leg_wound_name" xml:space="preserve">
    <value>Leg Wound</value>
  </data>
  <data name="lbl_injury_multiple_injuries_description" xml:space="preserve">
    <value>The fighter is not dead but has suffered many serious wounds. Roll a further D6 times on this chart.  Re-roll any ‘Dead’ and ‘Full Recovery’ results</value>
  </data>
  <data name="lbl_injury_multiple_injuries_name" xml:space="preserve">
    <value>Multiple Injuries</value>
  </data>
  <data name="lbl_injury_old_battle_wound_description" xml:space="preserve">
    <value>The fighter recovers but his old wound sometimes affects his health. Roll a D6 before each game. On the roll of a 1 the fighter’s old wound is playing up and he is unable to take part in the forthcoming battle.</value>
  </data>
  <data name="lbl_injury_old_battle_wound_name" xml:space="preserve">
    <value>Old Battle Wound</value>
  </data>
  <data name="lbl_injury_shell_shock_description" xml:space="preserve">
    <value>The fighter survives but is extremely nervous and jumpy as a result of the traumatic injuries he has suffered. His Initiative characteristic is reduced by -1.</value>
  </data>
  <data name="lbl_injury_shell_shock_name" xml:space="preserve">
    <value>Shell Shock</value>
  </data>
  <data name="lbl_injury_spore_sickness_description" xml:space="preserve">
    <value>This is a fungal disease in which plump and colourful fungi sprout from all over the victim’s body. Spore Sickness is not lethal and recovery is automatic, but the ganger will not be able to take part in future battles until he recovers by rolling a 4, 5 or 6 at the start of a game. Once recovered he may fight as normal.</value>
  </data>
  <data name="lbl_injury_spore_sickness_name" xml:space="preserve">
    <value>Spore Sickness</value>
  </data>
  <data name="lbl_injury_survives_against_the_odds_name" xml:space="preserve">
    <value>Survives Against the Odds</value>
  </data>
  <data name="lbl_injury_survives_against_the_odss_description" xml:space="preserve">
    <value>The fighter regains consciousness alone in the darkness, given up for dead by his companions and overlooked by his enemies. Despite his injuries he makes his way back home. He recovers fully and his uncanny survival earns him an additional D6 Experience points.</value>
  </data>
</root>